{"uid":"8d4d4c6bf6b2b10e","name":"test_homepage_ui_elements","fullName":"tests.test_ui.TestUI#test_homepage_ui_elements","historyId":"27d6d51e2d30c2a42225fdddd6f22d5a","time":{"start":1725453762701,"stop":1725453773038,"duration":10337},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7FA10B5D2+29090]\n\t(No symbol) [0x00007FF7FA07E689]\n\t(No symbol) [0x00007FF7F9F3B1CA]\n\t(No symbol) [0x00007FF7F9F8EFD7]\n\t(No symbol) [0x00007FF7F9F8F22C]\n\t(No symbol) [0x00007FF7F9FD97F7]\n\t(No symbol) [0x00007FF7F9FB672F]\n\t(No symbol) [0x00007FF7F9FD65D9]\n\t(No symbol) [0x00007FF7F9FB6493]\n\t(No symbol) [0x00007FF7F9F809B1]\n\t(No symbol) [0x00007FF7F9F81B11]\n\tGetHandleVerifier [0x00007FF7FA428C5D+3295277]\n\tGetHandleVerifier [0x00007FF7FA474843+3605523]\n\tGetHandleVerifier [0x00007FF7FA46A707+3564247]\n\tGetHandleVerifier [0x00007FF7FA1C6EB6+797318]\n\t(No symbol) [0x00007FF7FA08980F]\n\t(No symbol) [0x00007FF7FA0853F4]\n\t(No symbol) [0x00007FF7FA085580]\n\t(No symbol) [0x00007FF7FA074A1F]\n\tBaseThreadInitThunk [0x00007FFAA1D3257D+29]\n\tRtlUserThreadStart [0x00007FFAA2F8AF28+40]","statusTrace":"self = <test_ui.TestUI object at 0x000001B84FA20680>\n\n    @pytest.mark.usefixtures(\"setup\")\n    def test_homepage_ui_elements(self):\n        self.driver.get(\"https://www.saucedemo.com/inventory.html\")\n    \n        # Wait for the product to be clickable and then click it\n>       WebDriverWait(self.driver, 10).until(\n            EC.element_to_be_clickable((By.CLASS_NAME, \"inventory_item_name\"))\n        ).click()\n\ntests\\test_ui.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e4ad1030cccfb90b48acacb55eaabf6c\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001B84FA45620>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7FA10B5D2+29090]\nE       \t(No symbol) [0x00007FF7FA07E689]\nE       \t(No symbol) [0x00007FF7F9F3B1CA]\nE       \t(No symbol) [0x00007FF7F9F8EFD7]\nE       \t(No symbol) [0x00007FF7F9F8F22C]\nE       \t(No symbol) [0x00007FF7F9FD97F7]\nE       \t(No symbol) [0x00007FF7F9FB672F]\nE       \t(No symbol) [0x00007FF7F9FD65D9]\nE       \t(No symbol) [0x00007FF7F9FB6493]\nE       \t(No symbol) [0x00007FF7F9F809B1]\nE       \t(No symbol) [0x00007FF7F9F81B11]\nE       \tGetHandleVerifier [0x00007FF7FA428C5D+3295277]\nE       \tGetHandleVerifier [0x00007FF7FA474843+3605523]\nE       \tGetHandleVerifier [0x00007FF7FA46A707+3564247]\nE       \tGetHandleVerifier [0x00007FF7FA1C6EB6+797318]\nE       \t(No symbol) [0x00007FF7FA08980F]\nE       \t(No symbol) [0x00007FF7FA0853F4]\nE       \t(No symbol) [0x00007FF7FA085580]\nE       \t(No symbol) [0x00007FF7FA074A1F]\nE       \tBaseThreadInitThunk [0x00007FFAA1D3257D+29]\nE       \tRtlUserThreadStart [0x00007FFAA2F8AF28+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1725453760971,"stop":1725453762701,"duration":1730},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"setup::0","time":{"start":1725453773163,"stop":1725453773321,"duration":158},"status":"broken","statusMessage":"KeyboardInterrupt\n","statusTrace":"  File \"D:\\Assignments\\Automation testing\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Assignments\\Automation testing\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 906, in _teardown_yield_fixture\n    next(it)\n  File \"D:\\Assignments\\Automation testing\\utils\\base_test.py\", line 11, in setup\n    self.driver.quit()\n  File \"D:\\Assignments\\Automation testing\\venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py\", line 193, in quit\n    self.service.stop()\n  File \"D:\\Assignments\\Automation testing\\venv\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py\", line 146, in stop\n    self.send_remote_shutdown_command()\n  File \"D:\\Assignments\\Automation testing\\venv\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py\", line 126, in send_remote_shutdown_command\n    request.urlopen(f\"{self.service_url}/shutdown\")\n  File \"C:\\Python312\\Lib\\urllib\\request.py\", line 215, in urlopen\n    return opener.open(url, data, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\urllib\\request.py\", line 515, in open\n    response = self._open(req, data)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\urllib\\request.py\", line 532, in _open\n    result = self._call_chain(self.handle_open, protocol, protocol +\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\urllib\\request.py\", line 492, in _call_chain\n    result = func(*args)\n             ^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\urllib\\request.py\", line 1373, in http_open\n    return self.do_open(http.client.HTTPConnection, req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\urllib\\request.py\", line 1344, in do_open\n    h.request(req.get_method(), req.selector, req.data, headers,\n  File \"C:\\Python312\\Lib\\http\\client.py\", line 1336, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File \"C:\\Python312\\Lib\\http\\client.py\", line 1382, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File \"C:\\Python312\\Lib\\http\\client.py\", line 1331, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"C:\\Python312\\Lib\\http\\client.py\", line 1091, in _send_output\n    self.send(msg)\n  File \"C:\\Python312\\Lib\\http\\client.py\", line 1035, in send\n    self.connect()\n  File \"C:\\Python312\\Lib\\http\\client.py\", line 1001, in connect\n    self.sock = self._create_connection(\n                ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\socket.py\", line 828, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\socket.py\", line 963, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_ui"},{"name":"subSuite","value":"TestUI"},{"name":"host","value":"MS"},{"name":"thread","value":"9564-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_ui"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('setup')"]},"source":"8d4d4c6bf6b2b10e.json","parameterValues":[]}
{"name": "test_homepage_ui_elements", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF77CBCB5D2+29090]\n\t(No symbol) [0x00007FF77CB3E689]\n\t(No symbol) [0x00007FF77C9FB1CA]\n\t(No symbol) [0x00007FF77CA4EFD7]\n\t(No symbol) [0x00007FF77CA4F22C]\n\t(No symbol) [0x00007FF77CA997F7]\n\t(No symbol) [0x00007FF77CA7672F]\n\t(No symbol) [0x00007FF77CA965D9]\n\t(No symbol) [0x00007FF77CA76493]\n\t(No symbol) [0x00007FF77CA409B1]\n\t(No symbol) [0x00007FF77CA41B11]\n\tGetHandleVerifier [0x00007FF77CEE8C5D+3295277]\n\tGetHandleVerifier [0x00007FF77CF34843+3605523]\n\tGetHandleVerifier [0x00007FF77CF2A707+3564247]\n\tGetHandleVerifier [0x00007FF77CC86EB6+797318]\n\t(No symbol) [0x00007FF77CB4980F]\n\t(No symbol) [0x00007FF77CB453F4]\n\t(No symbol) [0x00007FF77CB45580]\n\t(No symbol) [0x00007FF77CB34A1F]\n\tBaseThreadInitThunk [0x00007FFAA1D3257D+29]\n\tRtlUserThreadStart [0x00007FFAA2F8AF28+40]", "trace": "self = <test_ui.TestUI object at 0x000001CBDF970320>\n\n    @pytest.mark.usefixtures(\"setup\")\n    def test_homepage_ui_elements(self):\n        self.driver.get(\"https://www.saucedemo.com/\")\n    \n        # Login\n        self.driver.find_element(By.ID, \"user-name\").send_keys(\"standard_user\")\n        self.driver.find_element(By.ID, \"password\").send_keys(\"secret_sauce\", Keys.RETURN)\n    \n        # Verify successful login\n        WebDriverWait(self.driver, 10).until(\n            EC.url_contains(\"inventory.html\")\n        )\n    \n        # Wait for the product to be clickable and then click it\n        WebDriverWait(self.driver, 10).until(\n            EC.element_to_be_clickable((By.CLASS_NAME, \"inventory_item_name\"))\n        ).click()\n    \n        # Wait for the add to cart button and click it\n        WebDriverWait(self.driver, 10).until(\n            EC.element_to_be_clickable((By.ID, \"add-to-cart\"))\n        ).click()\n    \n        # # Verify the product item is displayed (Assuming this is what you meant by \"search bar\")\n        # product_item = self.driver.find_element(By.CLASS_NAME, \"inventory_item_name\")\n        # WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.CLASS_NAME, \"inventory_item_name\")))\n        # assert product_item.is_displayed(), \"Product item is not displayed\"\n    \n        # # Verify the navigation menu button is displayed\n        # menu_button = self.driver.find_element(By.ID, \"react-burger-menu-btn\")\n        # assert menu_button.is_displayed(), \"Menu button is not displayed\"\n    \n        # # Verify the footer is displayed\n        # footer = self.driver.find_element(By.CLASS_NAME, \"footer_copy\")\n        # assert footer.is_displayed(), \"Footer is not displayed\"\n        #-------------------------------------------------------------------\n    \n        # Verify the product item is displayed\n>       product_item = WebDriverWait(self.driver, 10).until(\n            EC.presence_of_element_located((By.CLASS_NAME, \"inventory_item_name\"))\n        )\n\ntests\\test_ui.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ea602efb02443631cfc61b24ce13b35c\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001CBDF999580>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF77CBCB5D2+29090]\nE       \t(No symbol) [0x00007FF77CB3E689]\nE       \t(No symbol) [0x00007FF77C9FB1CA]\nE       \t(No symbol) [0x00007FF77CA4EFD7]\nE       \t(No symbol) [0x00007FF77CA4F22C]\nE       \t(No symbol) [0x00007FF77CA997F7]\nE       \t(No symbol) [0x00007FF77CA7672F]\nE       \t(No symbol) [0x00007FF77CA965D9]\nE       \t(No symbol) [0x00007FF77CA76493]\nE       \t(No symbol) [0x00007FF77CA409B1]\nE       \t(No symbol) [0x00007FF77CA41B11]\nE       \tGetHandleVerifier [0x00007FF77CEE8C5D+3295277]\nE       \tGetHandleVerifier [0x00007FF77CF34843+3605523]\nE       \tGetHandleVerifier [0x00007FF77CF2A707+3564247]\nE       \tGetHandleVerifier [0x00007FF77CC86EB6+797318]\nE       \t(No symbol) [0x00007FF77CB4980F]\nE       \t(No symbol) [0x00007FF77CB453F4]\nE       \t(No symbol) [0x00007FF77CB45580]\nE       \t(No symbol) [0x00007FF77CB34A1F]\nE       \tBaseThreadInitThunk [0x00007FFAA1D3257D+29]\nE       \tRtlUserThreadStart [0x00007FFAA2F8AF28+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1725466714490, "stop": 1725466725636, "uuid": "425753f1-b70b-49f4-9723-4d877504828d", "historyId": "27d6d51e2d30c2a42225fdddd6f22d5a", "testCaseId": "27d6d51e2d30c2a42225fdddd6f22d5a", "fullName": "tests.test_ui.TestUI#test_homepage_ui_elements", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUI"}, {"name": "host", "value": "MS"}, {"name": "thread", "value": "5404-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}]}